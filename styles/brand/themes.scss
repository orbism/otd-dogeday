/* Brand theme tokens and exposure mixin */
@use "sass:map";

/* Single default theme tokens */
$themes: (
	"default": (
		brand-bg: #261f17,
		brand-fg: #fff6e0,
		brand-accent: #d1a13a,
		brand-surface: rgba(255, 240, 208, 0.08),
		brand-border: rgba(217, 189, 147, 0.6),
		brand-shadow: 0 10px 32px rgba(85, 65, 30, 0.3)
	)
) !default;

/* Section colorways for default theme */
$sectionThemes: (
	"default": (
		splash: (
			section-bg: #f8e8c6,
			frame-bg: #fff7e1,
			frame-border: #d9bd93,
			section-text: #2f2a23,
			section-link: #8a5e29,
			section-title: #6d4b1f
		),
		details: (
			section-bg: #ffe29f,
			frame-bg: #fff1d8,
			frame-border: #d5ad74,
			section-text: #2f2a23,
			section-link: #6b60b2,
			section-title: #4b4882
		),
		signup: (
			section-bg: #ffc6a4,
			frame-bg: #ffedde,
			frame-border: #e5a17f,
			section-text: #2f2a23,
			section-link: #2f6f97,
			section-title: #224f6c
		),
		footer: (
			section-bg: #e4c07a,
			frame-bg: #fff0d0,
			frame-border: #c5a260,
			section-text: #2f2a23,
			section-link: #6f5aa8,
			section-title: #4e3e78
		)
	)
) !default;

@mixin expose-theme($name) {
	$map: map.get($themes, $name);
	@if $map == null { @warn "Theme `#{$name}` not found."; }
	@each $key, $val in $map { --#{$key}: #{$val}; }
}

/* Expose default theme tokens at :root without requiring data-theme */
:root { @include expose-theme("default"); }

/* Generate section-scoped CSS variables for default theme only */
@each $sname, $vars in map.get($sectionThemes, "default") {
	[data-section="#{$sname}"] {
		@each $k, $v in $vars {
			--#{$k}: #{$v};
		}
	}
}